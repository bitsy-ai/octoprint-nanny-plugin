# This is a basic workflow to help you get started with Actions

name: Online Installer, Unit Tests, Coverage

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, nightly ]
  pull_request:
    branches: [ main, nightly ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python virtualenv
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
      - name: Install dependencies
        run: |
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel twine octoprint pip-tools
        # Runs a set of commands using the runners shell
      - name: Test installation
        run: |
          source .venv/bin/activate
          python -m pip --no-cache-dir install .
      - name: Install test dependencies
        run: |
          source .venv/bin/activate
          pip install -r dev-requirements.txt
      - name: Generate code coverage report
        run: |
          source .venv/bin/activate
          make ci-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          directory: ./coverage/reports/
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
      - name: Run offline / unit tests
        run: |
          source .venv/bin/activate
          make ci-test
